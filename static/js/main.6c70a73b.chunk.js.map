{"version":3,"sources":["validations/validations.js","components/Login/LogIn.js","components/DashBoard/DashBoard.js","components/Register/Register.js","ProtectedRoute.js","components/Page404/Page404.js","components/AboutApp/AboutApp.js","App.js","serviceWorker.js","index.js"],"names":["validateName","value","field","test","validatePassword","passwordValue","length","LogIn","props","state","submit","initialValues","userName","password","validate","values","errors","key","onSubmit","actions","setSubmitting","userObj","localStorage","getItem","localUname","JSON","parse","localUpwd","base64","decode","isUserLoggedIn","setItem","stringify","setState","ToastsStore","error","className","id","role","aria-labelledby","src","alt","handleSubmit","touched","type","placeholder","name","onChange","handleChange","onBlur","handleBlur","to","pathname","store","position","ToastsContainerPosition","TOP_RIGHT","React","Component","_","require","DashBoard","onLogoutYes","toggle","get","loggedInUserObj","onLogout","logout","username","board","boardItem","loggedInUserName","this","location","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","warning","showCancel","confirmBtnText","confirmBtnBsStyle","title","onConfirm","onCancel","focusCancelBtn","Register","firstName","lastName","cpassword","encode","success","resetForm","ProtectedRoute","component","rest","render","userNameKey","Page404","class","AboutApp","data-dismiss","data-parent","href","target","rel","App","path","exact","Boolean","window","hostname","match","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6c70a73b.chunk.js","sourcesContent":["const validateName = (value, field) => {\n  if (!value) {\n    return \"Required\";\n  } else if (!/^[A-Za-z]+$/i.test(value)) {\n    return `Invalid ${field}`;\n  }\n};\nconst validatePassword = (value, field, passwordValue) => {\n  if (!value) {\n    return \"Required\";\n  } else if (value.length > 6 || value.length < 6) {\n    return \"6 characters only allowed\";\n  } else if (field === \"cpassword\" && value !== passwordValue) {\n    return \"Passwords do not match.\";\n  }\n};\n\nexport default validateName;\n\nexport { validateName, validatePassword };\n","import React from \"react\";\nimport {\n  ToastsContainer,\n  ToastsStore,\n  ToastsContainerPosition,\n} from \"react-toasts\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport base64 from \"react-native-base64\";\nimport { Formik } from \"formik\";\nimport { validateName, validatePassword } from \"../../validations/validations\";\n\nclass LogIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submit: false,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Formik\n          initialValues={{\n            userName: \"\",\n            password: \"\",\n          }}\n          validate={(values) => {\n            const errors = {};\n\n            errors.userName = validateName(values.userName, \"Username\") || null;\n            errors.password = validatePassword(values.password) || null;\n\n            for (var key in errors) {\n              if (errors[key] !== null) return errors;\n            }\n            return true;\n          }}\n          onSubmit={(values, actions) => {\n            actions.setSubmitting(false);\n            let userObj = localStorage.getItem(values.userName);\n            if (!userObj) {\n              ToastsStore.error(\"Invalid Username/Password.\");\n            } else {\n              userObj = JSON.parse(userObj);\n              const localUname = (userObj && userObj.userName) || null;\n              const localUpwd =\n                (userObj && base64.decode(userObj.password)) || null;\n\n              if (\n                values.userName === localUname &&\n                values.password === localUpwd\n              ) {\n                userObj.isUserLoggedIn = true;\n                localStorage.setItem(values.userName, JSON.stringify(userObj));\n                this.setState({ submit: true });\n              } else {\n                ToastsStore.error(\"Invalid Username/Password.\");\n              }\n            }\n          }}\n        >\n          {(props) => (\n            <div className=\"container mt-2 mb-4 divMiddle\">\n              <div className=\"col-sm-8 ml-auto mr-auto\">\n                <h1 className=\"display-5 text-center pb-5\">\n                  <u>Voypost Login/Logout</u>\n                </h1>\n                <div\n                  className=\"tab-content col-sm-6 ml-auto mr-auto\"\n                  id=\"pills-tabContent\"\n                >\n                  <div\n                    className=\"tab-pane fade show active\"\n                    id=\"pills-signin\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"pills-signin-tab\"\n                  >\n                    <div className=\"col-sm-12 border border-primary shadow rounded pt-2\">\n                      <div className=\"text-center\">\n                        <img\n                          src=\"./logo.png\"\n                          className=\"rounded-circle border p-1 rotate\"\n                          alt=\"\"\n                        />\n                      </div>\n                      <form onSubmit={props.handleSubmit}>\n                        <div className=\"form-group\">\n                          <label className=\"font-weight-bold\">\n                            Username <span className=\"text-danger\">*</span>\n                            <span className=\"errorMsg\">\n                              {props.errors.userName &&\n                                props.touched.userName &&\n                                props.errors.userName}\n                            </span>\n                          </label>\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"UserName\"\n                            name=\"userName\"\n                            onChange={props.handleChange}\n                            onBlur={props.handleBlur}\n                            value={props.values.userName}\n                          />\n                        </div>\n                        <div className=\"form-group\">\n                          <label className=\"font-weight-bold\">\n                            Password <span className=\"text-danger\">*</span>\n                            <span className=\"errorMsg\">\n                              {props.errors.password &&\n                                props.touched.password &&\n                                props.errors.password}\n                            </span>\n                          </label>\n                          <input\n                            type=\"password\"\n                            className=\"form-control\"\n                            placeholder=\"***********\"\n                            name=\"password\"\n                            onChange={props.handleChange}\n                            onBlur={props.handleBlur}\n                            value={props.values.password}\n                          />\n                        </div>\n                        <div className=\"form-group\">\n                          <div className=\"row\">\n                            <div className=\"col text-right\">\n                              {\" \"}\n                              <Link to={\"/register\"}>Create Account</Link>{\" \"}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"submit\"\n                            name=\"submit\"\n                            value=\"Sign In\"\n                            className=\"btn btn-block btn-primary\"\n                          />\n                        </div>\n                      </form>\n                      {localStorage.getItem(props.values.userName) &&\n                      JSON.parse(localStorage.getItem(props.values.userName))\n                        .isUserLoggedIn ? (\n                        <Redirect\n                          to={{\n                            pathname: \"/dashboard\",\n                            state: { userName: props.values.userName },\n                          }}\n                        />\n                      ) : null}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <ToastsContainer\n                store={ToastsStore}\n                position={ToastsContainerPosition.TOP_RIGHT}\n              />\n            </div>\n          )}\n        </Formik>\n      </div>\n    );\n  }\n}\nexport default LogIn;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nconst _ = require(\"lodash\");\n\nclass DashBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.name,\n      board: [],\n      boardItem: \"\",\n      toggle: false,\n      submit: true,\n      logout: false,\n      loggedInUserObj: {},\n    };\n  }\n\n  onLogoutYes = () => {\n    this.setState({ submit: false });\n    this.setState({ toggle: true });\n    const userObj = JSON.parse(\n      localStorage.getItem(_.get(this.state.loggedInUserObj, \"userName\", \"\"))\n    );\n    userObj.isUserLoggedIn = false;\n    localStorage.setItem(\n      _.get(this.state.loggedInUserObj, \"userName\", \"\"),\n      JSON.stringify(userObj)\n    );\n  };\n\n  onLogout = () => {\n    this.setState({\n      logout: !this.state.logout,\n    });\n  };\n\n  componentDidMount() {\n    const loggedInUserName = _.get(this.props.location, \"state.userName\", {});\n    this.setState({\n      loggedInUserObj: JSON.parse(localStorage.getItem(loggedInUserName)),\n    });\n  }\n\n  render() {\n    const localUname = `${_.get(\n      this.state.loggedInUserObj,\n      \"firstName\",\n      \"\"\n    )} ${_.get(this.state.loggedInUserObj, \"lastName\", \"\")}`;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark static-top\">\n          <div className=\"container\">\n            <img src=\"./logo.png\" alt=\"\" className=\"rotate\" />\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarResponsive\"\n              aria-controls=\"navbarResponsive\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li\n                  className=\"nav-item active text-right\"\n                  onClick={this.onLogout}\n                >\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-danger\"\n                    onClick={this.onLogout}\n                  >\n                    LOGOUT\n                  </button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n\n        <div className=\"container\">\n          <h1 className=\"mt-4\">HELLO {localUname}</h1>\n          <p>Welcome to DashBoard</p>\n        </div>\n        {!this.state.submit ? <Redirect to={`/`} /> : null}\n        {this.state.logout ? (\n          <SweetAlert\n            warning\n            showCancel\n            confirmBtnText=\"Yes\"\n            confirmBtnBsStyle=\"danger\"\n            title=\"Are you sure?\"\n            onConfirm={this.onLogoutYes}\n            onCancel={this.onLogout}\n            focusCancelBtn\n          ></SweetAlert>\n        ) : (\n          \"\"\n        )}\n\n        {/* <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\n          <a className=\"navbar-brand\" href=\"#\">\n            Navbar\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#collapsibleNavbar\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Link\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Link\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Link\n                </a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n        <br />\n\n        <div className=\"container\">\n          <h3>Collapsible Navbar</h3>\n          <p>\n            In this example, the navigation bar is hidden on small screens and\n            replaced by a button in the top right corner (try to re-size this\n            window).\n          </p>\n          <p>\n            Only when the button is clicked, the navigation bar will be\n            displayed.\n          </p>\n          <p>\n            Tip: You can also remove the .navbar-expand-md className to ALWAYS\n            hide navbar links and display the toggler button.\n          </p>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default DashBoard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport {\n  ToastsContainer,\n  ToastsStore,\n  ToastsContainerPosition,\n} from \"react-toasts\";\nimport base64 from \"react-native-base64\";\nimport { validateName, validatePassword } from \"../../validations/validations\";\n\nclass Register extends React.Component {\n  render() {\n    return (\n      <div>\n        <Formik\n          initialValues={{\n            firstName: \"\",\n            lastName: \"\",\n            userName: \"\",\n            password: \"\",\n            cpassword: \"\",\n          }}\n          validate={(values) => {\n            const errors = {};\n\n            errors.firstName =\n              validateName(values.firstName, \"First Name\") || null;\n            errors.lastName =\n              validateName(values.lastName, \"Last Name\") || null;\n            errors.userName =\n              validateName(values.userName, \"User Name\") || null;\n            errors.password =\n              validatePassword(values.password, \"password\") || null;\n            errors.cpassword =\n              validatePassword(\n                values.cpassword,\n                \"cpassword\",\n                values.password\n              ) || null;\n\n            for (var key in errors) {\n              if (errors[key] !== null) return errors;\n            }\n            return true;\n          }}\n          onSubmit={(values, actions) => {\n            actions.setSubmitting(false);\n\n            if (!localStorage.getItem(values.userName)) {\n              localStorage.setItem(\n                values.userName,\n                JSON.stringify({\n                  firstName: values.firstName,\n                  lastName: values.lastName,\n                  userName: values.userName,\n                  password: base64.encode(values.password),\n                  isUserLoggedIn: false,\n                })\n              );\n\n              ToastsStore.success(\"User registered successfully.\");\n              actions.resetForm();\n            } else {\n              ToastsStore.error(\"Username is already exists.\");\n            }\n          }}\n        >\n          {(props) => (\n            <div className=\"container mt-2 mb-4 divMiddle\">\n              <div className=\"col-sm-4 ml-auto mr-auto\">\n                <div className=\"tab-content\" id=\"pills-tabContent\">\n                  <div\n                    className=\"tab-pane fade show active\"\n                    id=\"pills-signup\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"pills-signup-tab\"\n                  >\n                    <div className=\"col-sm-12 border border-primary shadow rounded pt-2\">\n                      <div className=\"text-center\">\n                        <img\n                          src=\"./logo.png\"\n                          className=\"rounded-circle border p-1 rotate\"\n                          alt=\"\"\n                        />\n                      </div>\n                      <form onSubmit={props.handleSubmit}>\n                        <div className=\"form-group\">\n                          <label className=\"font-weight-bold\">\n                            First Name <span className=\"text-danger\">*</span>\n                            <span className=\"errorMsg\">\n                              {props.errors.firstName &&\n                                props.touched.firstName &&\n                                props.errors.firstName}\n                            </span>\n                          </label>\n                          <input\n                            type=\"text\"\n                            placeholder=\"Enter First Name\"\n                            name=\"firstName\"\n                            className=\"form-control\"\n                            onChange={props.handleChange}\n                            onBlur={props.handleBlur}\n                            value={props.values.firstName}\n                          />\n                        </div>\n                        <div className=\"form-group\">\n                          <label className=\"font-weight-bold\">\n                            Las Name <span className=\"text-danger\">*</span>\n                            <span className=\"errorMsg\">\n                              {props.errors.lastName &&\n                                props.touched.lastName &&\n                                props.errors.lastName}\n                            </span>\n                          </label>\n                          <input\n                            type=\"text\"\n                            placeholder=\"Enter Last Name\"\n                            name=\"lastName\"\n                            className=\"form-control\"\n                            onChange={props.handleChange}\n                            onBlur={props.handleBlur}\n                            value={props.values.lastName}\n                          />\n                        </div>\n                        <div className=\"form-group\">\n                          <label className=\"font-weight-bold\">\n                            User Name <span className=\"text-danger\">*</span>\n                            <span className=\"errorMsg\">\n                              {props.errors.userName &&\n                                props.touched.userName &&\n                                props.errors.userName}\n                            </span>\n                          </label>\n                          <input\n                            type=\"text\"\n                            placeholder=\"Enter User Name\"\n                            name=\"userName\"\n                            className=\"form-control\"\n                            onChange={props.handleChange}\n                            onBlur={props.handleBlur}\n                            value={props.values.userName}\n                          />\n                          <div className=\"text-danger\">\n                            <em>This will be your login name!</em>\n                          </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                          <label className=\"font-weight-bold\">\n                            Password <span className=\"text-danger\">*</span>\n                            <span className=\"errorMsg\">\n                              {props.errors.password &&\n                                props.touched.password &&\n                                props.errors.password}\n                            </span>\n                          </label>\n                          <input\n                            type=\"password\"\n                            name=\"password\"\n                            className=\"form-control\"\n                            placeholder=\"***********\"\n                            onChange={props.handleChange}\n                            onBlur={props.handleBlur}\n                            value={props.values.password}\n                          />\n                        </div>\n                        <div className=\"form-group\">\n                          <label className=\"font-weight-bold\">\n                            Confirm Password{\" \"}\n                            <span className=\"text-danger\">*</span>\n                            <span className=\"errorMsg\">\n                              {props.errors.cpassword &&\n                                props.touched.cpassword &&\n                                props.errors.cpassword}\n                            </span>\n                          </label>\n                          <input\n                            type=\"password\"\n                            name=\"cpassword\"\n                            className=\"form-control\"\n                            placeholder=\"***********\"\n                            onChange={props.handleChange}\n                            onBlur={props.handleBlur}\n                            value={props.values.cpassword}\n                          />\n                        </div>\n                        <div className=\"form-group\">\n                          <label>\n                            <p>\n                              Already have an account?{\" \"}\n                              <Link to={\"/\"}>Sign In</Link>{\" \"}\n                            </p>\n                          </label>\n                        </div>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"submit\"\n                            name=\"signupsubmit\"\n                            value=\"Sign Up\"\n                            className=\"btn btn-block btn-primary\"\n                          />\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </Formik>\n        <ToastsContainer\n          store={ToastsStore}\n          position={ToastsContainerPosition.TOP_RIGHT}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport _ from \"lodash\";\n\nfunction requireAuth(userNameKey) {\n  return JSON.parse(localStorage.getItem(userNameKey)).isUserLoggedIn;\n}\n\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (\n          _.get(props.location, \"state.userName\") &&\n          requireAuth(props.location.state.userName)\n        ) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Page404 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submit: false,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <div class=\"container divMiddle\">\n          <div class=\" text-center col-sm-8 ml-auto mr-auto\">\n            <div class=\"col-lg-6 offset-lg-3 col-sm-6 offset-sm-3 col-12 p-3 error-main\">\n              <div class=\"row\">\n                <div class=\"col-lg-8 col-12 col-sm-10 offset-lg-2 offset-sm-1\">\n                  <h1 class=\"m-0\">404</h1>\n                  <h6>Page not found</h6>\n                  <p>\n                    <Link to={\"/\"}>\n                      <button type=\"button\" class=\"btn btn-success\">\n                        Go Back\n                      </button>\n                    </Link>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Page404;\n","import React from \"react\";\nimport {\n  FaUser,\n  FaMobile,\n  FaAt,\n  FaBoxOpen,\n  FaGithub,\n} from \"react-icons/fa\";\n\nclass AboutApp extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"bottom-right\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            data-toggle=\"modal\"\n            data-target=\"#myModal\"\n          >\n            About\n          </button>\n        </div>\n\n        <div className=\"modal\" id=\"myModal\">\n          <div className=\"modal-dialog modal-dialog-centered\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">About App</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                  &times;\n                </button>\n              </div>\n\n              <div className=\"modal-body\">\n                <div id=\"accordion\">\n                  <div className=\"card\">\n                    <div className=\"card-header\" id=\"headingOne\">\n                      <h5 className=\"mb-0\">\n                        <button\n                          className=\"btn btn-link\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#collapseOne\"\n                          aria-expanded=\"true\"\n                          aria-controls=\"collapseOne\"\n                        >\n                          <FaUser className=\"mr-3\" />\n                          About Me\n                        </button>\n                      </h5>\n                    </div>\n\n                    <div\n                      id=\"collapseOne\"\n                      className=\"collapse\"\n                      aria-labelledby=\"headingOne\"\n                      data-parent=\"#accordion\"\n                    >\n                      <div className=\"card-body\">\n                        <ul className=\"list-group\">\n                          <li className=\"list-group-item\">\n                            <FaUser className=\"mr-3\" />\n                           Ali Kurbanov \n                            <a\n                              href=\"https://github.com/Ali-Universe\"\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <FaGithub className=\"ml-3\" />\n                            </a>\n                          </li>\n                          <li className=\"list-group-item\">\n                            <FaMobile className=\"mr-3\" />\n                            +996 552 01 19 77\n                          </li>\n                          <li className=\"list-group-item\">\n                            <FaAt className=\"mr-3\" />\n                            kurbanovmuratali@gmail.com\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"card mt-2\">\n                    <div className=\"card-header\" id=\"headingTwo\">\n                      <h5 className=\"mb-0\">\n                        <button\n                          className=\"btn btn-link\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#collapseTwo\"\n                          aria-expanded=\"true\"\n                          aria-controls=\"collapseTwo\"\n                        >\n                          <FaBoxOpen className=\"mr-3\" />\n                          Packages Used\n                        </button>\n                      </h5>\n                    </div>\n\n                    <div\n                      id=\"collapseTwo\"\n                      className=\"collapse\"\n                      aria-labelledby=\"headingTwo\"\n                      data-parent=\"#accordion\"\n                    >\n                      <div className=\"card-body\">\n                        <ul className=\"list-group\">\n                          <li className=\"list-group-item\">\n                            <FaBoxOpen className=\"mr-3\" />\n                            BootStrap\n                          </li>\n                          <li className=\"list-group-item\">\n                            <FaBoxOpen className=\"mr-3\" />\n                            Formik\n                          </li>\n                          <li className=\"list-group-item\">\n                            <FaBoxOpen className=\"mr-3\" />\n                            Lodash\n                          </li>\n                          <li className=\"list-group-item\">\n                            <FaBoxOpen className=\"mr-3\" />\n                            Sweet Alert\n                          </li>\n                          <li className=\"list-group-item\">\n                            <FaBoxOpen className=\"mr-3\" />\n                            React Toasts\n                          </li>\n                          <li className=\"list-group-item\">\n                            <FaBoxOpen className=\"mr-3\" />\n                            React Native Base 64\n                          </li>\n                          <li className=\"list-group-item\">\n                            <FaBoxOpen className=\"mr-3\" />\n                            React Icons\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default AboutApp;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport LogIn from \"./components/Login/LogIn\";\nimport DashBoard from \"./components/DashBoard/DashBoard\";\nimport Register from \"./components/Register/Register\";\nimport { ProtectedRoute } from \"./ProtectedRoute\";\nimport Page404 from \"./components/Page404/Page404\";\nimport AboutApp from \"./components/AboutApp/AboutApp\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={LogIn} />\n          <Route path=\"/register\" exact component={Register} />\n          <ProtectedRoute exact path=\"/dashboard\" component={DashBoard} />\n          <Route path=\"*\" component={Page404} />\n        </Switch>\n      </Router>\n      <AboutApp />\n    </div>\n  );\n}\n\nexport default App;\n","\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nconst app = (<BrowserRouter>\n    <App></App>\n</BrowserRouter>)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}